name: CI/CD Pipeline

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

permissions:
  pull-requests: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

    - name: Run tests
      run: pytest tests/ --disable-warnings

    - name: Create Pull Request from develop to main
      if: github.event_name == 'push'
      uses: actions/github-script@v6
      with:
        script: |
          const { data: existingPRs } = await github.rest.pulls.list({
            owner: context.repo.owner,
            repo: context.repo.repo,
            state: 'open',
            head: 'develop',
            base: 'main'
          });

          if (existingPRs.length === 0) {
            console.log("No PR exists. Creating a new one...");
            await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: 'develop',
              base: 'main',
              title: 'Auto PR: develop to main',
              body: 'This PR was automatically created by the CI/CD workflow.'
            });
          } else {
            console.log(`PR already exists: #${existingPRs[0].number}`);
          }

    - name: Merge to main if successful
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const { owner, repo } = context.repo;
          const pullRequest = context.payload.pull_request;
          if (!pullRequest) {
            console.log("This workflow was not triggered by a pull request.");
            return;
          }
          const pull_number = pullRequest.number;
          await github.rest.pulls.merge({
            owner,
            repo,
            pull_number,
            merge_method: "squash"
          });
          console.log(`PR #${pull_number} has been merged.`);
